"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[220],{5188:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var t=s(4848),r=s(8453);const o={sidebar_position:4},i="AWS S3",c={id:"guide/north-connectors/aws-s3",title:"AWS S3",description:"The AWS S3 North connector is designed to write files received from South connectors to the designated AWS S3 bucket.",source:"@site/docs/guide/north-connectors/aws-s3.md",sourceDirName:"guide/north-connectors",slug:"/guide/north-connectors/aws-s3",permalink:"/docs/guide/north-connectors/aws-s3",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"guideSidebar",previous:{title:"File Writer",permalink:"/docs/guide/north-connectors/file-writer"},next:{title:"Azure Blob",permalink:"/docs/guide/north-connectors/azure-blob"}},d={},h=[{value:"Specific settings",id:"specific-settings",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"aws-s3",children:"AWS S3"}),"\n",(0,t.jsx)(n.p,{children:"The AWS S3 North connector is designed to write files received from South connectors to the designated AWS S3 bucket."}),"\n",(0,t.jsx)(n.h2,{id:"specific-settings",children:"Specific settings"}),"\n",(0,t.jsx)(n.p,{children:"Here are the essential parameters for configuring the AWS S3 connector:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Bucket"}),": The name of the AWS S3 bucket."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Region"}),": The region where the bucket is located (e.g., ",(0,t.jsx)(n.code,{children:"eu-west-3"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Folder"}),": The specific folder within the bucket where files should be stored."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Access key"}),": The authentication key used for connecting to the Amazon S3 bucket."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Secret key"}),": The secret key associated with the access key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use proxy"}),": An option to utilize a proxy for sending HTTP requests."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Proxy URL"}),": The URL of the proxy server to pass requests through."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Proxy username"}),": The username linked to the proxy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Proxy password"}),": The password associated with the proxy username."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);