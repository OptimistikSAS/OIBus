"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[2978],{1944:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"guide/engine/scan-modes","title":"Scan modes","description":"Scan modes are Cron defined and used in OIBus to retrieve data at specific dates and interval from","source":"@site/versioned_docs/version-v2/guide/engine/scan-modes.md","sourceDirName":"guide/engine","slug":"/guide/engine/scan-modes","permalink":"/docs/v2/guide/engine/scan-modes","draft":false,"unlisted":false,"tags":[],"version":"v2","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"guideSidebar","previous":{"title":"Logging parameters","permalink":"/docs/v2/guide/engine/logging-parameters"},"next":{"title":"Cache and archive","permalink":"/docs/v2/guide/engine/cache-and-archive"}}');var o=s(4848),t=s(8453);const r={sidebar_position:3},d="Scan modes",c={},a=[];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"scan-modes",children:"Scan modes"})}),"\n",(0,o.jsxs)(n.p,{children:["Scan modes are Cron defined and used in OIBus to retrieve data at specific dates and interval from\n",(0,o.jsx)(n.a,{href:"/docs/v2/guide/south-connectors/common-settings",children:"South connectors"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Four default scan modes are defined:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"everySecond"}),"\n",(0,o.jsx)(n.li,{children:"every10Seconds"}),"\n",(0,o.jsx)(n.li,{children:"every1Minute"}),"\n",(0,o.jsx)(n.li,{children:"every10Minutes"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can define your own scan modes by adding one, giving it a name and selecting the ",(0,o.jsx)(n.em,{children:"every"})," option. Then, select the\ninterval and the unit (msec, sec, minute, hour, day, week, month, year)."]}),"\n",(0,o.jsxs)(n.p,{children:["Under the hood, OIBus transforms these intervals into Cron. So naturally, Cron can be used to tune scan modes. To do so,\nswitch the ",(0,o.jsx)(n.em,{children:"every"})," option to ",(0,o.jsx)(n.em,{children:"custom"}),", and type your Cron."]}),"\n",(0,o.jsxs)(n.admonition,{title:"Specific cron syntax",type:"danger",children:[(0,o.jsx)(n.p,{children:"The Cron in OIBus supports milliseconds cron, but with a reverse order:"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"<year> <month> <day> <hour> <minute> <second> <millisecond>"})})]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);