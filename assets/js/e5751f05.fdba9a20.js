"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[7833],{7892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=n(4848),s=n(8453);const o={sidebar_position:16},r="OSIsoft PI",c={id:"guide/south-connectors/osisoft-pi",title:"OSIsoft PI",description:"OSIsoft PI is a software platform used for collecting, and visualizing data from industrial operations. These data",source:"@site/docs/guide/south-connectors/osisoft-pi.md",sourceDirName:"guide/south-connectors",slug:"/guide/south-connectors/osisoft-pi",permalink:"/docs/guide/south-connectors/osisoft-pi",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"guideSidebar",previous:{title:"OLEDB",permalink:"/docs/guide/south-connectors/oledb"},next:{title:"History queries",permalink:"/docs/guide/history-queries"}},a={},d=[{value:"Specific settings",id:"specific-settings",level:2},{value:"Item settings",id:"item-settings",level:2}];function l(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"osisoft-pi",children:"OSIsoft PI"}),"\n",(0,i.jsxs)(t.p,{children:["OSIsoft PI is a software platform used for collecting, and visualizing data from industrial operations. These data\ncan be retrieved through the OSIsoft PI driver embedded in our ",(0,i.jsx)(t.a,{href:"/docs/guide/oibus-agent/installation",children:"OIBus Agent"}),", in a\ndedicated PI module."]}),"\n",(0,i.jsx)(t.admonition,{type:"caution",children:(0,i.jsx)(t.p,{children:"The OIBus Agent must be installed on a Windows machine to use the PI module."})}),"\n",(0,i.jsx)(t.h2,{id:"specific-settings",children:"Specific settings"}),"\n",(0,i.jsx)(t.p,{children:"OIBus exchanges commands and data with the PI Agent through an HTTP communication. Therefore, several\nfields must be filled to make OIBus communicate with the PI Agent:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Remote agent URL"}),": Specify the URL of the remote OIBus agent, e.g., ",(0,i.jsx)(t.a,{href:"http://ip-address-or-host:2224",children:"http://ip-address-or-host:2224"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Retry interval"}),": Time to wait before retrying connection."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"item-settings",children:"Item settings"}),"\n",(0,i.jsx)(t.p,{children:"When configuring each item to retrieve data in JSON payload, you'll need to specify the following specific settings:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Type"}),": pointId to access a point through its fully qualified ID, or pointQuery to access a list of points that"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Point ID"}),": The fully qualified ID of the point (without the server name)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Point Query"}),": A selector to access multiple points at once.\nSee ",(0,i.jsx)(t.a,{href:"https://docs.aveva.com/bundle/af-sdk/page/html/pipoint-query-syntax-overview.htm#Examples",children:"this documentation"}),"\nfor example."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The name of the item will serve as a reference in JSON payloads if the type is pointId. For pointQuery items, the PI\nname will be used as reference."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(6540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);