!function(e){var t={};function s(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,o){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(o,n,function(t){return e[t]}.bind(null,n));return o},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=5)}([function(e,t){e.exports=class{constructor(e,t){this.equipment=e,this.engine=t}connect(){const{equipmentId:e,protocol:t}=this.equipment;console.warn(`equipement ${e} started with protocol ${t}`)}onScan(){}listen(){}}},function(e,t,s){const o=s(6),n=s(2),i=s(7);e.exports={parseArgs:()=>{const e=o(process.argv.slice(2));return(({config:e="./fTbus.config.json"})=>!!e||(console.error("No config file specified, example: --config ./config/config.json"),!1))(e)?e:null},tryReadFile:e=>{if(!e.endsWith(".json"))return console.error("You must provide a json file for the configuration!"),new Error("You must provide a json file for the configuration!");try{return i.parse(n.readFileSync(e,"utf8"))}catch(e){return console.error(e),e}}}},function(e,t){e.exports=require("fs")},function(e){e.exports={name:"ftbus",private:!0,version:"0.0.1",main:"index.js",author:"factoryThings",license:"SEE LICENSE in LICENSE",scripts:{start:"node src/index.js --config ./tests/fTbus.json",build:"npx webpack --mode production","build-dev":"npx webpack --mode development","build-doc":"esdoc",test:"jest",lint:"eslint ."},keywords:["factoryThings"],dependencies:{"@babel/runtime":"^7.1.5","@koa/cors":"^2.2.2",async:"^2.6.1","basic-auth":"^2.0.1","fast-csv":"^2.4.1",jsmodbus:"^3.1.0",json5:"^2.1.0",koa:"^2.6.2","koa-basic-auth":"^3.0.0","koa-bodyparser":"^4.2.1","koa-helmet":"^4.0.0","koa-json":"^2.0.2","koa-logger":"^3.2.0","koa-respond":"^2.1.0","koa-router":"^7.4.0",minimist:"^1.2.0",mqtt:"^2.18.8","node-fetch":"^2.3.0","node-opcua":"^0.5.0","sprintf-js":"^1.1.1",timexe:"^0.9.13",winston:"^3.1.0"},devDependencies:{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","babel-eslint":"^10.0.1","babel-loader":"^8.0.4",eslint:"^5.9.0","eslint-config-airbnb":"^17.1.0","eslint-plugin-import":"^2.14.0","eslint-plugin-jsx-a11y":"^6.1.2","eslint-plugin-react":"^7.11.1","ignore-loader":"^0.1.2",webpack:"^4.25.1","webpack-cli":"^3.1.2"}}},function(e,t){e.exports=class{constructor(e,t){this.application=e,this.engine=t,this.config=this.engine.config,this.scanModes=this.engine.scanModes,this.start()}start(){this.engine.register("addValue",this.onUpdate.bind(this))}get(e){console.info("Get the stats of ",e,"from ",this.application.api)}connect(){this.engine.logger.info("connect")}disconnect(){this.engine.logger.info("disconnect")}sendValue(e){this.engine.logger.info("sendValue",e)}onUpdate(){this.engine.logger.info("onUpdate")}}},function(e,t,s){const{parseArgs:o}=s(1),n=s(8),i=o()||{},{config:r="./fTbus.json"}=i;new n(r).start()},function(e,t){e.exports=require("minimist")},function(e,t){e.exports=require("json5")},function(e,t,s){const o=s(9),{EventEmitter:n}=s(10),{tryReadFile:i}=s(1),r=s(3).version,c=s(11),a=s(15),l=s(19),p=s(21),u=s(23),d=s(24),h=s(26),f=s(39),g={MQTT:p,Modbus:c,OPCUA:a,CSV:l},m={Console:u,InfluxDB:d},b=e=>{["engine.scanModes","engine.port","engine.user","engine.password","south.equipments","north.applications"].forEach(t=>{const[s,o]=t.split(".");if(!e[s])throw new Error(`You should define ${s} in the config file`);if(!e[s][o])throw new Error(`You should define ${t} in the config file`)})};e.exports=class{constructor(e){this.config=i(e),b(this.config),this.logger=new f(this.config.engine.logParameters),this.bus=new n,this.scanLists={},this.config.engine.scanModes.forEach(({scanMode:e})=>{this.scanLists[e]=[]}),this.config.south.equipments.forEach(e=>{e.points.forEach(t=>{"."===t.pointId.charAt(0)&&(t.pointId=e.pointIdRoot+t.pointId.slice(1)),t.scanMode||(t.scanMode=e.defaultScanMode),e.enabled&&this.scanLists[t.scanMode]&&!this.scanLists[t.scanMode].includes(e.equipmentId)&&this.scanLists[t.scanMode].push(e.equipmentId)})}),this.activeProtocols={},this.activeApis={},this.activeMachines={}}addValue({pointId:e,data:t,timestamp:s}){this.bus.emit("addValue",{pointId:e,timestamp:s,data:t})}register(e,t){this.bus.on(e,e=>{t(e)})}start(){new h(this).listen(),this.config.south.equipments.forEach(e=>{const{protocol:t,enabled:s,equipmentId:o}=e,n=g[t];if(s){if(!n)throw new Error(`Protocol for ${o} is not supported : ${t}`);this.activeProtocols[o]=new n(e,this),this.activeProtocols[o].connect()}}),this.pointApplication={},this.config.north.applications.forEach(e=>{const{api:t,enabled:s,applicationId:o}=e,n=m[t];if(s){if(!n)throw new Error(`API for ${o} is not supported : ${t}`);this.activeApis[o]=new n(e,this),this.activeApis[o].connect()}}),this.config.engine.scanModes.forEach(({scanMode:e,cronTime:t})=>{const s=o(t,()=>{this.scanLists[e].forEach(t=>{this.activeProtocols[t].onScan(e)})});if("ok"!==s.result)throw new Error(`The scan  ${e} could not start : ${s.error}`)}),console.info(`fTbus version ${r} started`)}}},function(e,t){e.exports=require("timexe")},function(e,t){e.exports=require("events")},function(e,t,s){const o=s(12),n=s(13),i=s(14),r=s(0),c=(e,t)=>{t.forEach(t=>{t.type===e.pointId.split(".").slice(-1).pop()&&(e.type=t.fields[0].type,e.dataId=t.fields[0].name,t.fields.length>1&&console.error("Modbus points cannot contain more than 1 field"))})};e.exports=class extends r{constructor(e,t){super(e,t);const{addressGap:s}=this.engine.config.south.Modbus;this.optimizedConfig=i(this.equipment,s),this.socket=new n.Socket,this.host=e.Modbus.host,this.port=e.Modbus.port,this.connected=!1,this.client=new o.client.TCP(this.socket)}onScan(e){const{connected:t,optimizedConfig:s}=this,o=s[e];o&&t&&Object.keys(o).forEach(e=>{const t=o[e],s=`read${`${e.charAt(0).toUpperCase()}${e.slice(1)}`}s`;Object.entries(t).forEach(([e,t])=>{t.forEach(e=>c(e,this.engine.config.engine.types));const o=e.split("-"),n=parseInt(o[0],10),i=parseInt(o[1],10)-n;this.modbusFunction(s,{startAddress:n,rangeSize:i},t)})})}modbusFunction(e,{startAddress:t,rangeSize:s},o){this.client[e](t,s).then(({response:e})=>{const s=`${new Date}`;o.forEach(o=>{const n=parseInt(o.Modbus.address,16)-t-1;let i=e.body.valuesAsArray[n];switch(o.type){case"boolean":i=!!i;break;case"number":break;default:console.error("This point type was not recognized : ",o.type)}const r={pointId:o.pointId,timestamp:s,dataId:o.dataId,data:i};this.engine.addValue(r)})}).catch(e=>{console.error(e)})}connect(){super.connect();const{host:e,port:t}=this;this.socket.connect({host:e,port:t},()=>{this.connected=!0}),this.socket.on("error",e=>{console.error(e)})}disconnect(){this.connected&&(this.socket.end(),this.connected=!1)}}},function(e,t){e.exports=require("jsmodbus")},function(e,t){e.exports=require("net")},function(e,t){const s=(e,t,o)=>{const n=t.split("."),i=n.splice(0,1)[0];if(0!==n.length)return s(e[i],n.join("."),o);const r=e[i];return o&&delete e[i],r},o=(e,t,o={})=>e.reduce((e,n)=>{const i=s(n,t,!0);return e[i]||(e[i]=[]),e[i].push({...n,...o}),e},{}),n=(e,t,o)=>{return e.sort((e,o)=>{const n=s(e,t,!1),i=s(o,t,!1);return parseInt(n,16)-parseInt(i,16)}).reduce((e,n)=>{const i=s(n,t,!1),r=parseInt(i,16),c=16*Math.round(r/16),a=r<=c?c-16:c,l=16*Math.round((c+o)/16),p=((e,t)=>Object.keys(e).find(e=>{const s=e.split("-"),o=parseInt(s[0],10),n=parseInt(s[1],10);return t>=o&&t<=n}))(e,r)||`${a}-${l}`;return e[p]||(e[p]=[]),e[p].push(n),e},{})};e.exports=((e,t)=>{const s=o(e.points,"scanMode");return Object.keys(s).forEach(e=>{s[e]=o(s[e],"Modbus.type"),Object.keys(s[e]).forEach(o=>{s[e][o]=n(s[e][o],"Modbus.address",t[o])})}),s})},function(e,t,s){const o=s(16),{sprintf:n}=s(17),i=s(0),r=s(18),c=(e,t)=>{let s=[];return t.some(t=>{if(t.type===e.split(".").slice(-1).pop())return s=t.fields,!0}),s||(console.error("Unable to retrieve fields associated with this pointId ",e,scannedEquipment),{})};e.exports=class extends i{constructor(e,t){super(e,t),this.optimizedConfig=r(e),this.client=new o.OPCUAClient({endpoint_must_exist:!1}),this.url=n(t.config.south.OPCUA.connectionAddress.opc,e.OPCUA),this.maxAge=e.OPCUA.maxAge||10}async connect(){await this.client.connect(this.url,e=>{e?console.error(e):(console.log("OPCUA Connected"),this.client.createSession((e,t)=>{e?console.error("Could not connect to : ",this.equipment.equipmentId):(this.session=t,this.connected=!0)}))})}async onScan(e){const t=this.optimizedConfig[e];if(!this.connected||!t)return;const s={};t.forEach(e=>{s[e.pointId]={nodeId:n("ns=%(ns)s;s=%(s)s",e.OPCUAnodeId)}}),this.session.read(Object.values(s),this.maxAge,(e,o)=>{e||Object.keys(s).length!==o.length?console.error(e):Object.keys(s).forEach(e=>{const s=o.shift(),n={pointId:e,timestamp:s.sourceTimestamp.toString(),data:[],dataId:[]};console.log(e,t),console.log(c(e,this.engine.config.engine.types)),c(e,this.engine.config.engine.types).forEach(e=>{n.dataId.push(e.name),"quality"!==e.name?n.data.push(s.value.value):n.data.push(s.statusCode.value)}),this.engine.addValue(n)})})}}},function(e,t){e.exports=require("node-opcua")},function(e,t){e.exports=require("sprintf-js")},function(e,t){const s=(e,t,o)=>{const n=t.split("."),i=n.splice(0,1)[0];if(0!==n.length)return s(e[i],n.join("."),o);const r=e[i];return o&&delete e[i],r};e.exports=(e=>((e,t,o={})=>e.reduce((e,n)=>{const i=s(n,t,!0);return e[i]||(e[i]=[]),e[i].push({...n,...o}),e},{}))(e.points,"scanMode"))},function(e,t,s){const o=s(2),n=s(20),i=s(0);e.exports=class extends i{constructor(e,t){super(e,t),this.logger=this.engine.logger}onScan(e){const{CSV:t}=this.equipment,{inputFolder:s}=t;o.readdir(s,(e,t)=>{e?this.logger.error(e):(t.length||this.logger.info(`The folder ${s} is empty.`),t.forEach(e=>{this.processFile(s,e)}))})}processFile(e,t){const s=`${e}${t}`,{points:i,CSV:r}=this.equipment,{timeColumn:c,hasFirstLine:a,archiveFolder:l,errorFolder:p}=r,u=o.createReadStream(s);let d;u.on("error",s=>{this.logger.error(s),o.rename(`${e}${t}`,`${p}${t}`,e=>{e&&this.logger.error(e)}),this.logger.info("File move to ",`${p}${t}`)});let h=[],f=0;const g=n().on("data",e=>{a?1===(f+=1)?(d="number"==typeof c?c:e.indexOf(c),h=e):i.forEach(t=>{let s={};"number"==typeof Object.values(t.CSV)[0]?s=t.CSV:Object.keys(t.CSV).forEach(e=>{s[e]=h.indexOf(t.CSV[e])});const o={};Object.keys(s).forEach(t=>{o[t]=e[s[t]]});const n=e[d];this.engine.bus.emit("addValue",{pointId:t.pointId,timestamp:n,data:o})}):i.forEach(t=>{const s=t.CSV,o={};Object.keys(s).forEach(t=>{o[t]=e[s[t]]});const n=e[c];this.engine.addValue({pointId:t.pointId,timestamp:n,data:o})})}).on("end",()=>{this.logger.info("File loading end."),o.rename(`${e}${t}`,`${l}fichier.csv`,e=>{e&&this.logger.error(e)}),this.logger.info("File move succeeded!")});u.pipe(g)}}},function(e,t){e.exports=require("fast-csv")},function(e,t,s){const o=s(22),n=s(0);e.exports=class extends n{connect(){super.connect(),this.listen()}listen(){const{MQTT:{protocol:e,server:t,port:s,username:n,password:i}={},points:r}=this.equipment;this.client=o.connect(`${e}://${t}`,{port:s,username:n,password:Buffer.from(i)}),r.forEach(e=>{const{MQTT:{topic:t}={},pointId:s}=e;this.client.on("connect",()=>{this.client.subscribe(t,e=>{e&&console.error(e)})}),this.client.on("message",(e,o)=>{e===t&&this.engine.addValue({data:o.toString(),timestamp:new Date,pointId:s})})})}}},function(e,t){e.exports=require("mqtt")},function(e,t,s){const o=s(4);e.exports=class extends o{onUpdate(e){console.info(e)}}},function(e,t,s){const o=s(25),n=s(4),i=e=>{const t={};return e.slice(1).split("/").forEach(e=>{const s=e.replace(/[\w ]+\.([\w]+)/g,"$1"),o=e.replace(/([\w ]+)\.[\w]+/g,"$1");t[s]=o}),t},r=e=>{if("string"==typeof e){return e.replace(/ /g,"\\ ")}return e};e.exports=class extends n{constructor(e,t){super(e,t),this.host=e.InfluxDB.host,this.currentObject={},this.start()}onUpdate(e){this.makeRequest(e)}makeRequest(e){const{host:t,user:s,password:n}=this.application.InfluxDB,{pointId:c,data:a,timestamp:l}=e,p=Object.entries(i(c)),u=p[0][1],d=p[p.length-1][0],h=`http://${t}/write?u=${s}&p=${n}&db=${u}`;let f,g;p.slice(1).forEach(([e,t])=>{f=f?`${f},${r(e)}=${r(t)}`:`${r(e)}=${r(t)}`});const m=JSON.parse(a);Object.entries(m).forEach(([e,t])=>{g=g?`${g},${r(e)}=${r(t)}`:`${r(e)}=${r(t)}`});const b=`${d},${f} ${g} ${l.getTime()}`;o(h,{body:b,headers:{"Content-Type":"application/x-www-form-urlencoded"},method:"POST"})}}},function(e,t){e.exports=require("node-fetch")},function(e,t,s){const o=s(27),n=s(28),i=s(29),r=s(30),c=s(31),a=s(32),l=s(33),p=s(34),u=s(35),d=s(38),h=s(3).version;e.exports=class{constructor(e){this.app=new o,this.app.engine=e;const t=new n,{debug:s=!1,user:f,password:g,port:m,filter:b=["127.0.0.1","::1"]}=e.config.engine;this.debug=s,this.port=m,this.user=f,this.password=g,"debug"===this.debug&&this.app.use(i()),this.app.use(a()),this.app.use(async(e,t)=>{const{ip:s}=e.request;b.includes(s)?await t():(console.error(`${s} is not authorized`),e.throw(401,"access denied ",`${s} is not authorized`))}),this.app.use(async(e,t)=>{try{await t()}catch(t){if(401!==t.status)throw t;e.status=401,e.set("WWW-Authenticate","Basic"),e.body="access was not authorized"}}),this.app.use(u({name:this.user,pass:this.password})),this.app.use(r()),this.app.use(c({enableTypes:["json"],jsonLimit:"5mb",strict:!0,onerror(e,t){t.throw("body parse error",422)}})),this.app.use(l()),this.app.use(p()),t.get("/",(e,t)=>{e.ok({module:" fTbus",VERSION:h})}).get("/infos",d.getInfo),this.app.use(t.routes()),this.app.use(t.allowedMethods())}listen(){this.app.listen(this.port,()=>console.info(`Server started on ${this.port}`))}}},function(e,t){e.exports=require("koa")},function(e,t){e.exports=require("koa-router")},function(e,t){e.exports=require("koa-logger")},function(e,t,s){"use strict";e.exports=function(e){return e=Object.assign({},{allowMethods:"GET,HEAD,PUT,POST,DELETE,PATCH"},e),Array.isArray(e.exposeHeaders)&&(e.exposeHeaders=e.exposeHeaders.join(",")),Array.isArray(e.allowMethods)&&(e.allowMethods=e.allowMethods.join(",")),Array.isArray(e.allowHeaders)&&(e.allowHeaders=e.allowHeaders.join(",")),e.maxAge&&(e.maxAge=String(e.maxAge)),e.credentials=!!e.credentials,e.keepHeadersOnError=void 0===e.keepHeadersOnError||!!e.keepHeadersOnError,function(t,s){const o=t.get("Origin");if(t.vary("Origin"),!o)return s();let n;if("function"==typeof e.origin){if(!(n=e.origin(t)))return s()}else n=e.origin||o;const i={};function r(e,s){t.set(e,s),i[e]=s}if("OPTIONS"!==t.method)return r("Access-Control-Allow-Origin",n),!0===e.credentials&&r("Access-Control-Allow-Credentials","true"),e.exposeHeaders&&r("Access-Control-Expose-Headers",e.exposeHeaders),e.keepHeadersOnError?s().catch(e=>{throw e.headers=Object.assign({},e.headers,i),e}):s();{if(!t.get("Access-Control-Request-Method"))return s();t.set("Access-Control-Allow-Origin",n),!0===e.credentials&&t.set("Access-Control-Allow-Credentials","true"),e.maxAge&&t.set("Access-Control-Max-Age",e.maxAge),e.allowMethods&&t.set("Access-Control-Allow-Methods",e.allowMethods);let o=e.allowHeaders;o||(o=t.get("Access-Control-Request-Headers")),o&&t.set("Access-Control-Allow-Headers",o),t.status=204}}}},function(e,t){e.exports=require("koa-bodyparser")},function(e,t){e.exports=require("koa-helmet")},function(e,t){e.exports=require("koa-respond")},function(e,t){e.exports=require("koa-json")},function(e,t,s){const o=s(36),n=s(37);e.exports=((e={})=>(e.realm||(e.realm="Secure Area"),(t,s)=>{const i=n(t);if(i&&i.pass&&i.name===e.name){const t=o.createHash("sha256").update(i.pass).digest("hex");if(t===e.pass)return s();console.error("bad hash",t)}return t.throw(401,null,{headers:{"WWW-Authenticate":`Basic realm="${e.realm.replace(/"/g,'\\"')}"`}})}))},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("basic-auth")},function(e,t){e.exports={getInfo:e=>{const t=e.request.header.authorization||"";if(t.startsWith("Basic ")){{const e=t.split(" ")[1],s=Buffer.from(e,"base64").toString().split(":"),o=s[0],n=s[1];console.log(`request from ${o} with password:${n}`)}e.ok({config:e.app.engine.config})}else e.throw(400,"The authorization header is either empty or is not Basic.")}}},function(e,t,s){const{createLogger:o,format:n,transports:i}=s(40),{combine:r,timestamp:c,printf:a,colorize:l}=n;e.exports=class{constructor(e){const{consoleLevel:t,fileLevel:s,filename:n,maxFiles:p,maxsize:u,tailable:d}=e,h=r(c(),a(e=>`${e.timestamp} ${e.level}: ${e.message}`)),f=r(l(),a(e=>`${e.level}: ${e.message}`));this.logger=o({level:t,format:h,transports:[new i.Console({format:f}),new i.File({filename:n,level:s,maxsize:u,maxFiles:p,tailable:d})]})}info(e){this.logger.info(e)}warn(e){this.logger.warn(e)}error(e){this.logger.error(e)}debug(e){this.logger.debug(e)}}},function(e,t){e.exports=require("winston")}]);