// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Engine should be properly initialized 1`] = `
Engine {
  "activeApis": Object {},
  "activeProtocols": Object {},
  "addFileCount": 0,
  "addValuesCount": 0,
  "addValuesMessages": 0,
  "aliveSignal": AliveSignal {
    "authentication": Object {
      "password": "",
      "type": "Basic",
      "username": "",
    },
    "enabled": false,
    "engine": [Circular],
    "frequency": 300000,
    "host": "/api/optimistik/oibus/info",
    "id": "",
    "logger": Logger {
      "changeParameters": [MockFunction],
      "debug": [MockFunction],
      "error": [MockFunction],
      "getSource": [MockFunction],
      "info": [MockFunction],
      "removeDefaultSettings": [MockFunction],
      "silly": [MockFunction],
      "warn": [MockFunction],
    },
    "proxy": undefined,
    "timer": null,
    "verbose": false,
  },
  "aliveSignalMessages": 0,
  "cache": Cache {
    "apis": Object {},
    "archiveFolder": "/Users/burgerni10/Documents/Dev/OIBus/cache/archived",
    "archiveMode": "archive",
    "cacheFolder": "/Users/burgerni10/Documents/Dev/OIBus/cache",
    "cacheStats": Object {},
    "engine": [Circular],
    "filesErrorDatabasePath": "/Users/burgerni10/Documents/Dev/OIBus/cache/fileCache-error.db",
    "logger": Logger {
      "changeParameters": [MockFunction],
      "debug": [MockFunction],
      "error": [MockFunction],
      "getSource": [MockFunction],
      "info": [MockFunction],
      "removeDefaultSettings": [MockFunction],
      "silly": [MockFunction],
      "warn": [MockFunction],
    },
    "queue": Queue {
      "logger": Logger {
        "changeParameters": [MockFunction],
        "debug": [MockFunction],
        "error": [MockFunction],
        "getSource": [MockFunction],
        "info": [MockFunction],
        "removeDefaultSettings": [MockFunction],
        "silly": [MockFunction],
        "warn": [MockFunction],
      },
      "queue": Array [],
      "run": false,
    },
    "resendImmediately": Object {},
    "sendInProgress": Object {},
    "valuesErrorDatabasePath": "/Users/burgerni10/Documents/Dev/OIBus/cache/valueCache-error.db",
  },
  "configService": ConfigService {
    "config": Object {
      "engine": Object {
        "aliveSignal": Object {
          "authentication": Object {
            "password": "",
            "type": "Basic",
            "username": "",
          },
          "enabled": false,
          "endpoint": "/api/optimistik/oibus/info",
          "frequency": 300,
          "host": "",
          "id": "",
          "proxy": "",
        },
        "caching": Object {
          "archiveFolder": "./cache/archived/",
          "archiveMode": "archive",
          "cacheFolder": "./cache",
        },
        "engineName": "OIBus",
        "filter": Array [
          "127.0.0.1",
          "::1",
          "::ffff:127.0.0.1",
        ],
        "httpRequest": Object {
          "retryCount": 3,
          "stack": "fetch",
          "timeout": 30,
        },
        "logParameters": Object {
          "consoleLevel": "debug",
          "fileLevel": "debug",
          "filename": "./logs/journal.log",
          "maxFiles": 5,
          "maxsize": 1000000,
          "sqliteFilename": "./logs/journal.db",
          "sqliteLevel": "debug",
          "sqliteMaxFileSize": 50000000,
          "tailable": true,
        },
        "password": "",
        "port": 2223,
        "proxies": Array [],
        "scanModes": Array [
          Object {
            "cronTime": "* * * * * *",
            "scanMode": "everySecond",
          },
          Object {
            "cronTime": "* * * * * /10",
            "scanMode": "every10Seconds",
          },
          Object {
            "cronTime": "* * * * *",
            "scanMode": "every1Min",
          },
          Object {
            "cronTime": "* * * * /10",
            "scanMode": "every10Minutes",
          },
          Object {
            "cronTime": "listen",
            "scanMode": "listen",
          },
        ],
        "user": "admin",
      },
      "north": Object {
        "applications": Array [],
      },
      "schemaVersion": 9,
      "south": Object {
        "dataSources": Array [],
      },
    },
    "configFile": "src/tests/oibus win.json",
    "encryptionService": Object {
      "checkOrCreatePrivateKey": [Function],
      "decryptText": [Function],
      "setKeyFolder": [Function],
    },
    "engine": [Circular],
    "keyFolder": "cache/keys",
    "logger": Logger {
      "changeParameters": [MockFunction],
      "debug": [MockFunction],
      "error": [MockFunction],
      "getSource": [MockFunction],
      "info": [MockFunction],
      "removeDefaultSettings": [MockFunction],
      "silly": [MockFunction],
      "warn": [MockFunction],
    },
    "modifiedConfig": Object {
      "engine": Object {
        "aliveSignal": Object {
          "authentication": Object {
            "password": "",
            "type": "Basic",
            "username": "",
          },
          "enabled": false,
          "endpoint": "/api/optimistik/oibus/info",
          "frequency": 300,
          "host": "",
          "id": "",
          "proxy": "",
        },
        "caching": Object {
          "archiveFolder": "./cache/archived/",
          "archiveMode": "archive",
          "cacheFolder": "./cache",
        },
        "engineName": "OIBus",
        "filter": Array [
          "127.0.0.1",
          "::1",
          "::ffff:127.0.0.1",
        ],
        "httpRequest": Object {
          "retryCount": 3,
          "stack": "fetch",
          "timeout": 30,
        },
        "logParameters": Object {
          "consoleLevel": "debug",
          "fileLevel": "debug",
          "filename": "./logs/journal.log",
          "maxFiles": 5,
          "maxsize": 1000000,
          "sqliteFilename": "./logs/journal.db",
          "sqliteLevel": "debug",
          "sqliteMaxFileSize": 50000000,
          "tailable": true,
        },
        "password": "",
        "port": 2223,
        "proxies": Array [],
        "scanModes": Array [
          Object {
            "cronTime": "* * * * * *",
            "scanMode": "everySecond",
          },
          Object {
            "cronTime": "* * * * * /10",
            "scanMode": "every10Seconds",
          },
          Object {
            "cronTime": "* * * * *",
            "scanMode": "every1Min",
          },
          Object {
            "cronTime": "* * * * /10",
            "scanMode": "every10Minutes",
          },
          Object {
            "cronTime": "listen",
            "scanMode": "listen",
          },
        ],
        "user": "admin",
      },
      "north": Object {
        "applications": Array [],
      },
      "schemaVersion": 9,
      "south": Object {
        "dataSources": Array [],
      },
    },
  },
  "encryptionService": Object {
    "checkOrCreatePrivateKey": [Function],
    "decryptText": [Function],
    "setKeyFolder": [Function],
  },
  "jobs": Array [],
  "logger": Logger {
    "changeParameters": [MockFunction],
    "debug": [MockFunction],
    "error": [MockFunction],
    "getSource": [MockFunction],
    "info": [MockFunction],
    "removeDefaultSettings": [MockFunction],
    "silly": [MockFunction],
    "warn": [MockFunction],
  },
  "memoryStats": Object {},
  "scanLists": Object {
    "every10Minutes": Array [],
    "every10Seconds": Array [],
    "every1Min": Array [],
    "everySecond": Array [],
    "listen": Array [],
  },
  "version": "0.7.1",
}
`;
