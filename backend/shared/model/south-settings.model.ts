// DO NOT EDIT THIS BY HAND!
// This file is auto-generated by the script located backend/src/settings-interface.generator.ts
// To update the typescript model run npm run generate-settings-interface on the backend project

import { Timezone } from './types';

import { SharedConnection } from './engine.model';

export const SOUTH_A_D_S_SETTINGS_ENUM_AS_TEXTS = ['text', 'integer'] as const;
export type SouthADSSettingsEnumAsText = (typeof SOUTH_A_D_S_SETTINGS_ENUM_AS_TEXTS)[number];

export const SOUTH_A_D_S_SETTINGS_BOOL_AS_TEXTS = ['text', 'integer'] as const;
export type SouthADSSettingsBoolAsText = (typeof SOUTH_A_D_S_SETTINGS_BOOL_AS_TEXTS)[number];

export const SOUTH_MODBUS_SETTINGS_ADDRESS_OFFSETS = ['modbus', 'jbus'] as const;
export type SouthModbusSettingsAddressOffset = (typeof SOUTH_MODBUS_SETTINGS_ADDRESS_OFFSETS)[number];

export const SOUTH_MODBUS_SETTINGS_ENDIANNESSS = ['big-endian', 'little-endian'] as const;
export type SouthModbusSettingsEndianness = (typeof SOUTH_MODBUS_SETTINGS_ENDIANNESSS)[number];

export const SOUTH_MODBUS_ITEM_SETTINGS_DATA_DATA_TYPES = [
  'uint16',
  'int16',
  'uint32',
  'int32',
  'big-uint64',
  'big-int64',
  'float',
  'double',
  'bit'
] as const;
export type SouthModbusItemSettingsDataDataType = (typeof SOUTH_MODBUS_ITEM_SETTINGS_DATA_DATA_TYPES)[number];

export const SOUTH_MODBUS_ITEM_SETTINGS_MODBUS_TYPES = ['coil', 'discrete-input', 'input-register', 'holding-register'] as const;
export type SouthModbusItemSettingsModbusType = (typeof SOUTH_MODBUS_ITEM_SETTINGS_MODBUS_TYPES)[number];

export const SOUTH_M_Q_T_T_SETTINGS_AUTHENTICATION_TYPES = ['none', 'basic', 'cert'] as const;
export type SouthMQTTSettingsAuthenticationType = (typeof SOUTH_M_Q_T_T_SETTINGS_AUTHENTICATION_TYPES)[number];

export const SOUTH_M_Q_T_T_SETTINGS_QOSS = ['0', '1', '2'] as const;
export type SouthMQTTSettingsQos = (typeof SOUTH_M_Q_T_T_SETTINGS_QOSS)[number];

export const SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_TIMESTAMP_PAYLOAD_TIMESTAMP_TYPES = [
  'string',
  'iso-string',
  'unix-epoch',
  'unix-epoch-ms'
] as const;
export type SouthMQTTItemSettingsJsonPayloadTimestampPayloadTimestampType =
  (typeof SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_TIMESTAMP_PAYLOAD_TIMESTAMP_TYPES)[number];

export const SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_POINT_ID_ORIGINS = ['oibus', 'payload'] as const;
export type SouthMQTTItemSettingsJsonPayloadPointIdOrigin = (typeof SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_POINT_ID_ORIGINS)[number];

export const SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_TIMESTAMP_ORIGINS = ['oibus', 'payload'] as const;
export type SouthMQTTItemSettingsJsonPayloadTimestampOrigin = (typeof SOUTH_M_Q_T_T_ITEM_SETTINGS_JSON_PAYLOAD_TIMESTAMP_ORIGINS)[number];

export const SOUTH_M_Q_T_T_ITEM_SETTINGS_VALUE_TYPES = ['number', 'string', 'json'] as const;
export type SouthMQTTItemSettingsValueType = (typeof SOUTH_M_Q_T_T_ITEM_SETTINGS_VALUE_TYPES)[number];

export const SOUTH_M_S_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = [
  'iso-string',
  'unix-epoch',
  'unix-epoch-ms',
  'string',
  'Date',
  'SmallDateTime',
  'DateTime',
  'DateTime2',
  'DateTimeOffset'
] as const;
export type SouthMSSQLItemSettingsDateTimeFieldsType = (typeof SOUTH_M_S_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_M_S_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthMSSQLItemSettingsSerializationType = (typeof SOUTH_M_S_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_M_S_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthMSSQLItemSettingsSerializationDelimiter = (typeof SOUTH_M_S_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_MY_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = ['string', 'iso-string', 'unix-epoch', 'unix-epoch-ms'] as const;
export type SouthMySQLItemSettingsDateTimeFieldsType = (typeof SOUTH_MY_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_MY_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthMySQLItemSettingsSerializationType = (typeof SOUTH_MY_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_MY_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthMySQLItemSettingsSerializationDelimiter = (typeof SOUTH_MY_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_O_D_B_C_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = ['iso-string', 'unix-epoch', 'unix-epoch-ms', 'string'] as const;
export type SouthODBCItemSettingsDateTimeFieldsType = (typeof SOUTH_O_D_B_C_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_O_D_B_C_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthODBCItemSettingsSerializationType = (typeof SOUTH_O_D_B_C_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_O_D_B_C_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthODBCItemSettingsSerializationDelimiter = (typeof SOUTH_O_D_B_C_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_O_I_ANALYTICS_SETTINGS_SPECIFIC_SETTINGS_AUTHENTICATIONS = ['basic', 'aad-client-secret', 'aad-certificate'] as const;
export type SouthOIAnalyticsSettingsSpecificSettingsAuthentication =
  (typeof SOUTH_O_I_ANALYTICS_SETTINGS_SPECIFIC_SETTINGS_AUTHENTICATIONS)[number];

export const SOUTH_O_I_ANALYTICS_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthOIAnalyticsItemSettingsSerializationType = (typeof SOUTH_O_I_ANALYTICS_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_O_I_ANALYTICS_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthOIAnalyticsItemSettingsSerializationDelimiter =
  (typeof SOUTH_O_I_ANALYTICS_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_O_L_E_D_B_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = ['iso-string', 'unix-epoch', 'unix-epoch-ms', 'string'] as const;
export type SouthOLEDBItemSettingsDateTimeFieldsType = (typeof SOUTH_O_L_E_D_B_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_O_L_E_D_B_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthOLEDBItemSettingsSerializationType = (typeof SOUTH_O_L_E_D_B_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_O_L_E_D_B_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthOLEDBItemSettingsSerializationDelimiter = (typeof SOUTH_O_L_E_D_B_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_O_P_C_SETTINGS_MODES = ['hda', 'da'] as const;
export type SouthOPCSettingsMode = (typeof SOUTH_O_P_C_SETTINGS_MODES)[number];

export const SOUTH_O_P_C_ITEM_SETTINGS_AGGREGATES = [
  'raw',
  'interpolative',
  'total',
  'average',
  'time-average',
  'count',
  'stdev',
  'minimum-actual-time',
  'minimum',
  'maximum-actual-time',
  'maximum',
  'start',
  'end',
  'delta',
  'reg-slope',
  'reg-const',
  'reg-dev',
  'variance',
  'range',
  'duration-good',
  'duration-bad',
  'percent-good',
  'percent-bad',
  'worst-quality',
  'annotations'
] as const;
export type SouthOPCItemSettingsAggregate = (typeof SOUTH_O_P_C_ITEM_SETTINGS_AGGREGATES)[number];

export const SOUTH_O_P_C_ITEM_SETTINGS_RESAMPLINGS = ['none', '1s', '10s', '30s', '1min', '1h', '1d'] as const;
export type SouthOPCItemSettingsResampling = (typeof SOUTH_O_P_C_ITEM_SETTINGS_RESAMPLINGS)[number];

export const SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_AUTHENTICATION_TYPES = ['none', 'basic', 'cert'] as const;
export type SouthOPCUASettingsConnectionSettingsAuthenticationType =
  (typeof SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_AUTHENTICATION_TYPES)[number];

export const SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_SECURITY_MODES = ['none', 'sign', 'sign-and-encrypt'] as const;
export type SouthOPCUASettingsConnectionSettingsSecurityMode = (typeof SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_SECURITY_MODES)[number];

export const SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_SECURITY_POLICYS = [
  'none',
  'basic128',
  'basic192',
  'basic192-rsa15',
  'basic256-rsa15',
  'basic256-sha256',
  'aes128-sha256-rsa-oaep',
  'pub-sub-aes-128-ctr',
  'pub-sub-aes-256-ctr'
] as const;
export type SouthOPCUASettingsConnectionSettingsSecurityPolicy =
  (typeof SOUTH_O_P_C_U_A_SETTINGS_CONNECTION_SETTINGS_SECURITY_POLICYS)[number];

export const SOUTH_O_P_C_U_A_ITEM_SETTINGS_HA_MODE_AGGREGATES = ['raw', 'average', 'minimum', 'maximum', 'count'] as const;
export type SouthOPCUAItemSettingsHaModeAggregate = (typeof SOUTH_O_P_C_U_A_ITEM_SETTINGS_HA_MODE_AGGREGATES)[number];

export const SOUTH_O_P_C_U_A_ITEM_SETTINGS_HA_MODE_RESAMPLINGS = ['none', '1s', '10s', '30s', '1min', '1h', '1d'] as const;
export type SouthOPCUAItemSettingsHaModeResampling = (typeof SOUTH_O_P_C_U_A_ITEM_SETTINGS_HA_MODE_RESAMPLINGS)[number];

export const SOUTH_O_P_C_U_A_ITEM_SETTINGS_MODES = ['ha', 'da'] as const;
export type SouthOPCUAItemSettingsMode = (typeof SOUTH_O_P_C_U_A_ITEM_SETTINGS_MODES)[number];

export const SOUTH_O_P_C_U_A_ITEM_SETTINGS_TIMESTAMP_ORIGINS = ['oibus', 'point', 'server'] as const;
export type SouthOPCUAItemSettingsTimestampOrigin = (typeof SOUTH_O_P_C_U_A_ITEM_SETTINGS_TIMESTAMP_ORIGINS)[number];

export const SOUTH_ORACLE_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = ['iso-string', 'unix-epoch', 'unix-epoch-ms', 'string'] as const;
export type SouthOracleItemSettingsDateTimeFieldsType = (typeof SOUTH_ORACLE_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_ORACLE_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthOracleItemSettingsSerializationType = (typeof SOUTH_ORACLE_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_ORACLE_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthOracleItemSettingsSerializationDelimiter = (typeof SOUTH_ORACLE_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_P_I_ITEM_SETTINGS_TYPES = ['point-id', 'point-query'] as const;
export type SouthPIItemSettingsType = (typeof SOUTH_P_I_ITEM_SETTINGS_TYPES)[number];

export const SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = [
  'string',
  'iso-string',
  'unix-epoch',
  'unix-epoch-ms',
  'timestamp',
  'timestamptz'
] as const;
export type SouthPostgreSQLItemSettingsDateTimeFieldsType = (typeof SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthPostgreSQLItemSettingsSerializationType = (typeof SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthPostgreSQLItemSettingsSerializationDelimiter = (typeof SOUTH_POSTGRE_S_Q_L_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export const SOUTH_S_F_T_P_SETTINGS_AUTHENTICATIONS = ['password', 'private-key'] as const;
export type SouthSFTPSettingsAuthentication = (typeof SOUTH_S_F_T_P_SETTINGS_AUTHENTICATIONS)[number];

export const SOUTH_F_T_P_SETTINGS_AUTHENTICATIONS = ['none', 'password'] as const;
export type SouthFTPSettingsAuthentication = (typeof SOUTH_F_T_P_SETTINGS_AUTHENTICATIONS)[number];

export const SOUTH_S_Q_LITE_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES = ['iso-string', 'unix-epoch', 'unix-epoch-ms', 'string'] as const;
export type SouthSQLiteItemSettingsDateTimeFieldsType = (typeof SOUTH_S_Q_LITE_ITEM_SETTINGS_DATE_TIME_FIELDS_TYPES)[number];

export const SOUTH_S_Q_LITE_ITEM_SETTINGS_SERIALIZATION_TYPES = ['csv'] as const;
export type SouthSQLiteItemSettingsSerializationType = (typeof SOUTH_S_Q_LITE_ITEM_SETTINGS_SERIALIZATION_TYPES)[number];

export const SOUTH_S_Q_LITE_ITEM_SETTINGS_SERIALIZATION_DELIMITERS = [
  'DOT',
  'SEMI_COLON',
  'COLON',
  'COMMA',
  'NON_BREAKING_SPACE',
  'SLASH',
  'TAB',
  'PIPE'
] as const;
export type SouthSQLiteItemSettingsSerializationDelimiter = (typeof SOUTH_S_Q_LITE_ITEM_SETTINGS_SERIALIZATION_DELIMITERS)[number];

export interface SouthADSSettingsStructureFiltering {
  name: string;
  fields: string;
}

export interface SouthMQTTSettingsAuthentication {
  type: SouthMQTTSettingsAuthenticationType;
  username?: string;
  password?: string | null;
  certFilePath?: string;
  keyFilePath?: string;
  caFilePath?: string;
}

export interface SouthMSSQLSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthMySQLSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthODBCSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthOIAnalyticsSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthOIAnalyticsSettingsSpecificSettings {
  host: string;
  acceptUnauthorized: boolean;
  authentication: SouthOIAnalyticsSettingsSpecificSettingsAuthentication;
  accessKey?: string;
  secretKey?: string | null;
  tenantId?: string;
  clientId?: string;
  clientSecret?: string | null;
  certificateId?: string;
  scope?: string;
  useProxy: boolean;
  proxyUrl?: string;
  proxyUsername?: string;
  proxyPassword?: string | null;
}

export interface SouthOLEDBSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthOPCSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
  maxInstantPerItem: boolean;
}

export interface SouthOPCUASettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
  maxInstantPerItem: boolean;
}

export interface SouthOPCUASettingsConnectionSettingsAuthentication {
  type: SouthOPCUASettingsConnectionSettingsAuthenticationType;
  username?: string;
  password?: string | null;
  certFilePath?: string;
  keyFilePath?: string;
}

export interface SouthOPCUASettingsConnectionSettings {
  url: string;
  keepSessionAlive: boolean;
  securityMode: SouthOPCUASettingsConnectionSettingsSecurityMode;
  securityPolicy?: SouthOPCUASettingsConnectionSettingsSecurityPolicy;
  authentication: SouthOPCUASettingsConnectionSettingsAuthentication;
}

export interface SouthOracleSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthPISettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
  maxInstantPerItem: boolean;
}

export interface SouthPostgreSQLSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthSQLiteSettingsThrottling {
  maxReadInterval: number;
  readDelay: number;
  overlap: number;
}

export interface SouthADSSettings {
  netId: string;
  port: number;
  routerAddress: string | null;
  routerTcpPort: number | null;
  clientAmsNetId: string | null;
  clientAdsPort: number | null;
  retryInterval: number;
  plcName: string | null;
  enumAsText: SouthADSSettingsEnumAsText;
  boolAsText: SouthADSSettingsBoolAsText;
  structureFiltering: Array<SouthADSSettingsStructureFiltering> | null;
}

export interface SouthFolderScannerSettings {
  inputFolder: string;
  compression: boolean;
}

export interface SouthModbusSettings {
  host: string;
  port: number;
  retryInterval: number;
  slaveId: number;
  addressOffset: SouthModbusSettingsAddressOffset;
  endianness: SouthModbusSettingsEndianness;
  swapBytesInWords: boolean;
  swapWordsInDWords: boolean;
}

export interface SouthMQTTSettings {
  url: string;
  qos: SouthMQTTSettingsQos;
  persistent?: boolean;
  authentication: SouthMQTTSettingsAuthentication;
  rejectUnauthorized: boolean;
  reconnectPeriod: number;
  connectTimeout: number;
  maxNumberOfMessages: number;
  flushMessageTimeout: number;
}

export interface SouthMSSQLSettings {
  throttling: SouthMSSQLSettingsThrottling;
  host: string;
  port: number;
  connectionTimeout: number;
  database: string;
  encryption: boolean;
  trustServerCertificate: boolean;
  username: string | null;
  password: string | null;
  domain: string | null;
  requestTimeout: number;
}

export interface SouthMySQLSettings {
  throttling: SouthMySQLSettingsThrottling;
  host: string;
  port: number;
  connectionTimeout: number;
  database: string;
  username: string | null;
  password: string | null;
}

export interface SouthODBCSettings {
  throttling: SouthODBCSettingsThrottling;
  remoteAgent: boolean;
  agentUrl?: string;
  connectionTimeout: number;
  retryInterval: number;
  requestTimeout?: number;
  connectionString: string;
  password: string | null;
}

export interface SouthOIAnalyticsSettings {
  throttling: SouthOIAnalyticsSettingsThrottling;
  useOiaModule: boolean;
  timeout: number;
  specificSettings?: SouthOIAnalyticsSettingsSpecificSettings | null;
}

export interface SouthOLEDBSettings {
  throttling: SouthOLEDBSettingsThrottling;
  agentUrl: string;
  connectionTimeout: number;
  retryInterval: number;
  requestTimeout: number;
  connectionString: string;
}

export interface SouthOPCSettings {
  throttling: SouthOPCSettingsThrottling;
  agentUrl: string;
  retryInterval: number;
  host: string;
  serverName: string;
  mode: SouthOPCSettingsMode;
}

export interface SouthOPCUASettings {
  throttling: SouthOPCUASettingsThrottling;
  readTimeout: number;
  maxNumberOfMessages: number;
  flushMessageTimeout: number;
  sharedConnection: SharedConnection | null;
  retryInterval: number;
  connectionSettings?: SouthOPCUASettingsConnectionSettings;
}

export interface SouthOracleSettings {
  throttling: SouthOracleSettingsThrottling;
  thickMode: boolean;
  oracleClient?: string;
  host: string;
  port: number;
  connectionTimeout: number;
  database: string;
  username: string | null;
  password: string | null;
}

export interface SouthPISettings {
  throttling: SouthPISettingsThrottling;
  agentUrl: string;
  retryInterval: number;
}

export interface SouthPostgreSQLSettings {
  throttling: SouthPostgreSQLSettingsThrottling;
  host: string;
  port: number;
  connectionTimeout: number;
  database: string;
  requestTimeout: number;
  username: string | null;
  password: string | null;
}

export interface SouthSFTPSettings {
  host: string;
  port: number;
  authentication: SouthSFTPSettingsAuthentication;
  username: string;
  password?: string | null;
  privateKey?: string;
  passphrase?: string | null;
  compression: boolean;
}

export interface SouthFTPSettings {
  host: string;
  port: number;
  authentication: SouthFTPSettingsAuthentication;
  username: string | null;
  password?: string | null;
  compression: boolean;
}

export interface SouthSQLiteSettings {
  throttling: SouthSQLiteSettingsThrottling;
  databasePath: string;
}

export type SouthSettings =
  | SouthADSSettings
  | SouthFolderScannerSettings
  | SouthModbusSettings
  | SouthMQTTSettings
  | SouthMSSQLSettings
  | SouthMySQLSettings
  | SouthODBCSettings
  | SouthOIAnalyticsSettings
  | SouthOLEDBSettings
  | SouthOPCSettings
  | SouthOPCUASettings
  | SouthOracleSettings
  | SouthPISettings
  | SouthPostgreSQLSettings
  | SouthSFTPSettings
  | SouthFTPSettings
  | SouthSQLiteSettings;

export interface SouthModbusItemSettingsData {
  dataType: SouthModbusItemSettingsDataDataType;
  bitIndex?: number;
  multiplierCoefficient: number;
}

export interface SouthMQTTItemSettingsJsonPayloadTimestampPayload {
  timestampPath: string;
  timestampType: SouthMQTTItemSettingsJsonPayloadTimestampPayloadTimestampType;
  timestampFormat?: string;
  timezone?: Timezone;
}

export interface SouthMQTTItemSettingsJsonPayloadOtherFields {
  name: string;
  path: string;
}

export interface SouthMQTTItemSettingsJsonPayload {
  useArray: boolean;
  dataArrayPath?: string;
  valuePath: string;
  pointIdOrigin: SouthMQTTItemSettingsJsonPayloadPointIdOrigin;
  pointIdPath?: string;
  timestampOrigin: SouthMQTTItemSettingsJsonPayloadTimestampOrigin;
  timestampPayload?: SouthMQTTItemSettingsJsonPayloadTimestampPayload | null;
  otherFields: Array<SouthMQTTItemSettingsJsonPayloadOtherFields> | null;
}

export interface SouthMSSQLItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthMSSQLItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthMSSQLItemSettingsSerialization {
  type: SouthMSSQLItemSettingsSerializationType;
  filename: string;
  delimiter: SouthMSSQLItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthMySQLItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthMySQLItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthMySQLItemSettingsSerialization {
  type: SouthMySQLItemSettingsSerializationType;
  filename: string;
  delimiter: SouthMySQLItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthODBCItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthODBCItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthODBCItemSettingsSerialization {
  type: SouthODBCItemSettingsSerializationType;
  filename: string;
  delimiter: SouthODBCItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthOIAnalyticsItemSettingsQueryParams {
  key: string;
  value: string;
}

export interface SouthOIAnalyticsItemSettingsSerialization {
  type: SouthOIAnalyticsItemSettingsSerializationType;
  filename: string;
  delimiter: SouthOIAnalyticsItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthOLEDBItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthOLEDBItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthOLEDBItemSettingsSerialization {
  type: SouthOLEDBItemSettingsSerializationType;
  filename: string;
  delimiter: SouthOLEDBItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthOPCUAItemSettingsHaMode {
  aggregate: SouthOPCUAItemSettingsHaModeAggregate;
  resampling?: SouthOPCUAItemSettingsHaModeResampling;
}

export interface SouthOracleItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthOracleItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthOracleItemSettingsSerialization {
  type: SouthOracleItemSettingsSerializationType;
  filename: string;
  delimiter: SouthOracleItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthPostgreSQLItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthPostgreSQLItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthPostgreSQLItemSettingsSerialization {
  type: SouthPostgreSQLItemSettingsSerializationType;
  filename: string;
  delimiter: SouthPostgreSQLItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthSQLiteItemSettingsDateTimeFields {
  fieldName: string;
  useAsReference: boolean;
  type: SouthSQLiteItemSettingsDateTimeFieldsType;
  timezone?: Timezone;
  format?: string;
  locale?: string;
}

export interface SouthSQLiteItemSettingsSerialization {
  type: SouthSQLiteItemSettingsSerializationType;
  filename: string;
  delimiter: SouthSQLiteItemSettingsSerializationDelimiter;
  compression: boolean;
  outputTimestampFormat: string;
  outputTimezone: Timezone;
}

export interface SouthADSItemSettings {
  address: string;
}

export interface SouthFolderScannerItemSettings {
  regex: string;
  minAge: number;
  preserveFiles: boolean;
  ignoreModifiedDate?: boolean;
}

export interface SouthModbusItemSettings {
  address: string;
  modbusType: SouthModbusItemSettingsModbusType;
  data?: SouthModbusItemSettingsData | null;
}

export interface SouthMQTTItemSettings {
  topic: string;
  valueType: SouthMQTTItemSettingsValueType;
  jsonPayload?: SouthMQTTItemSettingsJsonPayload | null;
}

export interface SouthMSSQLItemSettings {
  query: string;
  dateTimeFields: Array<SouthMSSQLItemSettingsDateTimeFields> | null;
  serialization: SouthMSSQLItemSettingsSerialization;
}

export interface SouthMySQLItemSettings {
  query: string;
  requestTimeout: number;
  dateTimeFields: Array<SouthMySQLItemSettingsDateTimeFields> | null;
  serialization: SouthMySQLItemSettingsSerialization;
}

export interface SouthODBCItemSettings {
  query: string;
  dateTimeFields: Array<SouthODBCItemSettingsDateTimeFields> | null;
  serialization: SouthODBCItemSettingsSerialization;
}

export interface SouthOIAnalyticsItemSettings {
  endpoint: string;
  queryParams: Array<SouthOIAnalyticsItemSettingsQueryParams> | null;
  serialization: SouthOIAnalyticsItemSettingsSerialization;
}

export interface SouthOLEDBItemSettings {
  query: string;
  dateTimeFields: Array<SouthOLEDBItemSettingsDateTimeFields> | null;
  serialization: SouthOLEDBItemSettingsSerialization;
}

export interface SouthOPCItemSettings {
  nodeId: string;
  aggregate: SouthOPCItemSettingsAggregate;
  resampling?: SouthOPCItemSettingsResampling;
}

export interface SouthOPCUAItemSettings {
  nodeId: string;
  mode: SouthOPCUAItemSettingsMode;
  haMode?: SouthOPCUAItemSettingsHaMode | null;
  timestampOrigin?: SouthOPCUAItemSettingsTimestampOrigin;
}

export interface SouthOracleItemSettings {
  query: string;
  requestTimeout: number;
  dateTimeFields: Array<SouthOracleItemSettingsDateTimeFields> | null;
  serialization: SouthOracleItemSettingsSerialization;
}

export interface SouthPIItemSettings {
  type: SouthPIItemSettingsType;
  piPoint?: string;
  piQuery?: string;
}

export interface SouthPostgreSQLItemSettings {
  query: string;
  dateTimeFields: Array<SouthPostgreSQLItemSettingsDateTimeFields> | null;
  serialization: SouthPostgreSQLItemSettingsSerialization;
}

export interface SouthSFTPItemSettings {
  remoteFolder: string;
  regex: string;
  minAge: number;
  preserveFiles: boolean;
  ignoreModifiedDate?: boolean;
}

export interface SouthFTPItemSettings {
  remoteFolder: string;
  regex: string;
  minAge: number;
  preserveFiles: boolean;
  ignoreModifiedDate?: boolean;
}

export interface SouthSQLiteItemSettings {
  query: string;
  dateTimeFields: Array<SouthSQLiteItemSettingsDateTimeFields> | null;
  serialization: SouthSQLiteItemSettingsSerialization;
}

export type SouthItemSettings =
  | SouthADSItemSettings
  | SouthFolderScannerItemSettings
  | SouthModbusItemSettings
  | SouthMQTTItemSettings
  | SouthMSSQLItemSettings
  | SouthMySQLItemSettings
  | SouthODBCItemSettings
  | SouthOIAnalyticsItemSettings
  | SouthOLEDBItemSettings
  | SouthOPCItemSettings
  | SouthOPCUAItemSettings
  | SouthOracleItemSettings
  | SouthPIItemSettings
  | SouthPostgreSQLItemSettings
  | SouthSFTPItemSettings
  | SouthFTPItemSettings
  | SouthSQLiteItemSettings;
