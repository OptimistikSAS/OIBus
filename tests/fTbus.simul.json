{
  "engine": {
    // the port for the web interface to fTbus
    "port": 2222,
    // user/password (use ) (to do: use bcrypt)
    "user": "admin",
    "password": "pass",
    // the list of IP addresses allowed to access the Web interface
    "filter": ["127.0.0.1", "::1"],
    // the parameters for logs, describing different performances for different levels
    // and the file name which stocks the logs
    "logParameters": {
      // possible levels: debug, info, warn, error
      "consoleLevel": "debug", // specify only the lowest level
      "fileLevel": "debug",
      "filename": "./tests/journal.log",
      "maxSize": 1000000,
      "maxFiles": 5
    },
    // the scan mode section allow to create categories of scan
    // each categories will use the cron syntax to determine the
    // sequence. Format: year month day hour minute second millisec microsec
    "scanModes": [
      {
        "scanMode": "everySecond",
        "cronTime": "* * * * * *"
      },
      {
        "scanMode": "every5Second",
        "cronTime": "* * * * * /5"
      },
      {
        "scanMode": "every100ms",
        "cronTime": "* * * * * * /100"
      },
      {
        "scanMode": "every15DaysAt9",
        "cronTime": "0 0 /15 9"
      }
    ]
  },
  "south": {
    // this section contains protocol specific parameters
    "Modbus": {},
    "OPCUA": {
      "connectionAddress": {
        "opc": "opc.tcp://%(host)s:%(opcuaPort)s/%(endPoint)s",
        "https": "opc.tcp://%(host)s:%(httpsPort)s/%(endPoint)s"
      }
    },
    "OPCDA": {},
    "MQTT": {},
    "Profinet": {},
    "CSV": {},
    "SQL": {},
    "equipments": [
      {
        "equipmentId": "PLC1",
        "enabled": true,
        "protocol": "MQTT",
        "defaultScanMode": "every5Second",
        "MQTT": {
          "server": "simulator.factorythings.com",
          "protocol": "mqtts",
          "port": "8883",
          "username": "bai",
          "password": "secret"
        },
        "points": [
          {
            "MQTT": { "topic": "temperatureTank1" },
            "pointId": "Tank1.temperature"
          },
          {
            "MQTT": { "topic": "temperatureTank2" },
            "pointId": "Tank2.temperature"
          }
        ]
      },
      {
        "equipmentId": "PLC2",
        "enabled": true,
        "protocol": "Modbus",
        "defaultScanMode": "listen",
        "Modbus": {
          "host": "localhost",
          "port": 502
        },
        "points": [
          {
            "Modbus": {
              "address": "0x0031",
              "type": "coil"
            },
            "pointId": "tank3.fill_level"
          },
          {
            "Modbus": {
              "address": "0x0f8",
              "type": "holdingRegister"
            },
            "pointId": "tank2.valve_state"
          },
          {
            "Modbus": {
              "address": "0x76a0",
              "type": "coil"
            },
            "pointId": "tank 2.fill_level"
          },
          {
            "Modbus": {
              "address": "0x83a6",
              "type": "coil"
            },
            "pointId": "tank3.valve_state"
          }
        ]
      }
    ]
  },
  "north": {
    "applications": [
      {
        "applicationId": "SimulatorPLC1", // name of the simulator
        "api": "Simulator", // application for Simulation
        "enabled": true, // true/false
        "refreshCycle": 100, // the Simulator will update its value on each cycle (ms)
        "equipmentId": "PLC1", // the Simulator communicate through this equipment
        "points": [
          {
            "pointId": "Tank1.temperature", // the variable that will be updated
            "machineType": "Tank",
            "capacity": 400,
            "fillPerRefresh": 5,
            "emptyPerRefresh": 0.2,
            "precision": 0.1
          },
          {
            "pointId": "Tank2.temperature", // the variable that will be updated
            "machineType": "Tank",
            "capacity": 500,
            "fillPerRefresh": 10,
            "emptyPerRefresh": 0.4,
            "precision": 0.1
          }
        ]
      },
      {
        "applicationId": "SimulatorPLC2", // name of the simulator
        "api": "Simulator", // application for Simulation
        "enabled": true, // true/false
        "refreshCycle": 100, // the Simulator will update its value on each cycle (ms)
        "equipmentId": "PLC2", // the Simulator communicate through this equipment
        "points": [
          {
            "pointId": "Tank3.fill_level", // the variable that will be updated
            "machineType": "Tank",
            "capacity": 400,
            "fillPerRefresh": 5,
            "emptyPerRefresh": 0.2,
            "precision": 0.1
          },
          {
            "pointId": "Tank2.fill_level", // the variable that will be updated
            "machineType": "Tank",
            "capacity": 500,
            "fillPerRefresh": 10,
            "emptyPerRefresh": 0.4,
            "precision": 0.1
          }
        ]
      },
      {
        "applicationId": "SimulatorPLC2", // name of the simulator
        "api": "Simulator", // application for Simulation
        "enabled": true, // true/false
        "refreshCycle": 100, // the Simulator will update its value on each cycle (ms)
        "equipmentId": "PLC2", // the Simulator communicate through this equipment
        "machines": [
          {
            "pointId": "Mixer.rotation", // the variable that will be updated
            "machineType": "Mixer",
            "rotation": "* * * * * /15",
            "rotationSpeed": 10,
            "rotationDuration": 10,
            "precision": 0.1,
            "qualityIndicator": 0.96
          },
          {
            "pointId": "Filler.cadence", // the variable that will be updated
            "machineType": "Filler.",
            "cadence": 10,
            "alarmChance": 0.01,
            "alarmMinAge": 60, // alarm duration between 1mn to 3mn (random)
            "alarmMaxAge": 180,
            "precision": 0.2,
            "qualityIndicator": 0.95
          }
        ]
      }
    ]
  }
}
