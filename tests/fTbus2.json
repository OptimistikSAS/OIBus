{
  "engine": {
    "debug": true, // switch debug mode
    "port": 2222, // the port for the engine
    // the scan mode section allow to create categories of scan
    // each categories will use the cron syntax to determine the
    // sequence
    "scanModes": [
      {
        "scanMode": "everySecond",
        "cronTime": "* * * * * *"
      },
      {
        "scanMode": "everyNoon",
        "cronTime": "0 0 12 * * *"
      },
      {
        "scanMode": "every15DaysAt9",
        "cronTime": "0 0 9 */15 * *"
      }
    ],
    // types section allows to define the types managed by this engine
    "types": [
      {
        "type": "fill_level",
        "fields": [
          {
            "name": "value",
            "type": "number"
          }
        ]
      },
      {
        "type": "flow_rate",
        "fields": [
          {
            "name": "quality",
            "type": "boolean"
          }
        ]
      },
      {
        "type": "valve_state",
        "fields": [
          {
            "name": "value",
            "type": "boolean"
          }
        ]
      },
      {
        "type": "temperature",
        "fields": [
          {
            "name": "value",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "boolean"
          }
        ]
      },
    ]
  },
  "south": {
    // this section contains protocol specific parameters
    "modbus": {
      "enabled": true,
      "addressGap": {
        "holdingRegister": 256, // max number of Registers in one request
        "coil": 1000 // max number of Coils in one request
      }
    },
    "opcua": {
      "enabled": false,
      "connectionAddress": {
        "opc": "opc.tcp://%(host)s:%(opcuaPort)s/%(endPoint)s",
        "https": "opc.tcp://%(host)s:%(httpsPort)s/%(endPoint)s"
      }
    },
    "opcda": {
      "enabled": false,
    },
    "mqtt": {
      "enabled": false,
    },
    "profinet": {
      "enabled": false,
    },
    "csv": {
      "enabled": true,
    },
    "sql": {}
  },
  "equipments": [
    {
      "equipmentId": "CSVServer",
      "protocol": "csv",
      "pointIdRoot": "/fttest.base",
      "defaultScanMode": "everySecond",
      "csv": {
        "filename": "./fichier.csv",
        "archiveFolder": "./archived/",
        "errorFolder": "./error/",
        "separator": ",",
        "timeStampColum": 0,
      },
      "points": [
        {
          "csv": {
            "column": 1
          },
          "pointId": "./Tank 5.tank/333333.temperature",
        },
        {
          "csv": {
            "column": 2
          },
          "pointId": "./Tank 6.tank/333333.temperature",
        },
      ]
    },
    {
      "equipmentId": "SimulationServer",
      "protocol": "OPCUA",
      "pointIdRoot": "/fttest.base",
      "defaultScanMode": "everySecond",
      "OPCUA": {
        "host": "localhost",
        "opcuaPort": "53530",
        "httpsPort": "53443",
        "endPoint": "Server/Simulation"
      },
      "points": [
        {
          "OPCUAnodeId": {
            "ns": "5",
            "s": "Counter1"
          },
          "pointId": "./Tank 5.tank/333333.temperature",
          "type": "number"
        },
        {
          "OPCUAnodeId": {
            "ns": "5",
            "s": "Random1"
          },
          "pointId": "./Tank 5.tank/333333.temperature",
          "type": "number"
        },
        {
          "OPCUAnodeId": {
            "ns": "5",
            "s": "Random1"
          },
          "pointId": "./Tank 5.tank/333333.temperature",
          "type": "number",
          "scanMode": "everyNoon"
        }
      ]
    },
    {
      "equipmentId": "SimulationServerBis",
      "protocol": "OPCUA",
      "pointIdRoot": "/fttest.base",
      "defaultScanMode": "everySecond",
      "OPCUA": {
        "host": "localhost",
        "opcuaPort": "53530",
        "httpsPort": "53443",
        "endPoint": "Server/Simulation"
      },
      "points": [
        {
          "OPCUAnodeId": [
            {
              "ns": "5",
              "s": "Sinusoid1"
            },
            {
              "ns": "5",
              "s": "Sawtooth1"
            },
          ],
          "pointId": "./Tank 9.tank/333333.temperature",
        },
      ]
    },
    {
      "equipmentId": "PLC-35",
      "protocol": "Modbus",
      "pointIdRoot": "/fttest.base",
      "defaultScanMode": "everySecond",
      "Modbus": {
        "host": "localhost",
        "port": 502
      },
      "points": [
        {
          "Modbus": {
            "address": "0x0031",
            "type": "coil"
          },
          "pointId": "./Tank 3.tank/333333.fill_level",
        },
        {
          "Modbus": {
            "address": "0x0f8",
            "type": "holdingRegister"
          },
          "pointId": "./Tank 2.tank/222222.valve_state",
          "scanMode": "everyNoon"
        },
        {
          "Modbus": {
            "address": "0x76a0",
            "type": "coil"
          },
          "pointId": "./Tank 2.tank/222222.fill_level",
        },
        {
          "Modbus": {
            "address": "0x76b0",
            "type": "coil"
          },
          "pointId": "./Tank 2.tank/222333.fill_level"
        },
        {
          "Modbus": {
            "address": "0x83a6",
            "type": "coil"
          },
          "pointId": "./Tank 3.tank/111111.valve_state"
        }
      ]
    },
    {
      "equipmentId": "PLC-42",
      "protocol": "Modbus",
      "pointIdRoot": "/fttest.base/Tank4.tank",
      "defaultScanMode": "everySecond",
      "Modbus": {
        "host": "localhost",
        "port": 502
      },
      "points": [
        {
          "Modbus": {
            "address": "0x0f",
            "type": "coil"
          },
          "pointId": "./111111.fill_level"
        },
        {
          "Modbus": {
            "address": "0x20",
            "type": "holdingRegister"
          },
          "pointId": "./111111.flow_rate"
        }
      ]
    }
  ],

  "north": {
    "MyConsole": {
      "enabled": true,
      "type": "Console",
      "minimumBuffer:": 1, // 0 -> incorrect value. undefined -> 1
      "timeStamp": "fTbus",
      "Console": {
        "content": "%(pointId)s\n->%(data)s at %(timestamp)s"
      }
    },

    "BaseInflux": {
      "enabled": false,
      "type": "InfluxDB",
      "minimumBuffer:": 10, // group by 10 when possible
      "maxTimeinBuffer": 500, // 0 or undefined -> unlimited
      "InfluxDB": {
        "user": "admin",
        "password": "admin",
        "db": "testdata",
        "host": "localhost:8086",
        "insert": "%(host)s/write?db=%(base)s' --data-binary 'zzz,xxx=%(xxx)s,yyytag=%(yyy)s value=10"
      }
    }
  }
}
