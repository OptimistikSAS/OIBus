name: Package for x64
description: "Bundle OIBus on x64 architecture"
inputs:
  platform:
    description: "The platform target"
    required: true
  zip:
    description: "The zip command"
    required: true
  archive:
    description: "The archive name"
    required: true
  branch-release:
    description: "The branch to checkout"
    required: false
    default: main

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch-release }}

    - name: Setup backend environment
      uses: ./.github/actions/setup_backend_environment
      with:
        cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}

    - name: Setup frontend environment
      uses: ./.github/actions/setup_frontend_environment
      with:
        cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}

    - name: Bundle OIBus frontend for ${{ inputs.platform }}
      working-directory: ./frontend
      run: npm run build

    - name: Build OIBus for ${{ inputs.platform }}
      working-directory: ./backend
      run: npm run build:${{ inputs.platform }}

    - name: Test OIBus run for ${{ inputs.platform }}
      run: |
        cd build/bin/${{ inputs.platform }}
        ./oibus --config ../../../data-folder --check true

    - name: Package OIBus for ${{ inputs.platform }}
      working-directory: ./backend
      run: |
        cd build/bin/${{ inputs.platform }}
        ${{ inputs.zip }} ../${{ inputs.archive }} .

    - name: Upload artifact ${{ inputs.archive }}
      uses: actions/upload-artifact@v3
      with:
        path: ./build/bin/${{ inputs.archive }}

    - name: Package Windows installer
      env:
        PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        PFX_BASE64_CONTENT: ${{ secrets.PFX_BASE64_CONTENT }}
        PFX_PATH: C://oibus.pfx
      if: ${{ inputs.platform == 'win' }}
      shell: pwsh
      working-directory: ./backend
      run: |
        $encodedBytes = [System.Convert]::FromBase64String("$env:PFX_BASE64_CONTENT")
        Set-Content -Path "$env:PFX_PATH" -AsByteStream -Value $encodedBytes
        npm run build:win-setup
        Remove-Item -Path "$env:PFX_PATH";

    - name: Rename windows installer
      if: ${{ inputs.platform == 'win' }}
      run: mv ./build/bin/win-setup-release/oibus-setup.exe ./build/bin/win-setup-release/oibus-setup-win32x64.exe

    - name: Upload Windows installer
      if: ${{ inputs.platform == 'win' }}
      uses: actions/upload-artifact@v3
      with:
        path: ./build/bin/win-setup-release/oibus-setup-win32x64.exe

