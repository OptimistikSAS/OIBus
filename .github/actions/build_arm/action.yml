name: Package for ARM
description: "Execute pkg in arm architecture"
outputs:
  packaged-file:
    description: "The packaged file"
    value: ${{ steps.random-number-generator.outputs.random-number }}



runs:
  using: "composite"
  steps:
    - name: Pre build OIBus library for ${{ matrix.config['friendlyName'] }}
      working-directory: ./backend
      shell: bash
      run: |
        npm run build
        npm run internal:build:lib-linux-arm64

    - uses: actions/checkout@v3
    - uses: uraimo/run-on-arch-action@v2
      name: Run commands
      id: runcmd
      with:
        arch: aarch64
        distro: archarm_latest

        # Not required, but speeds up builds by storing container images in
        # a GitHub package registry.
        githubToken: ${{ github.token }}

        install: |
          apt update && apt -y install curl
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
          npm install -g pkg --prefix /usr/local
          pkg --version

        run: |
          pkg \
          --config ${{ inputs.config }} \
          --target=${{ steps.pkg-action-internal.outputs.target-node }}-${{ steps.pkg-action-internal.outputs.target-os }}-${{ steps.pkg-action-internal.outputs.target-arch }} \
          --out-path dist \
          ${{ inputs.options }} \
          ${{ inputs.entrypoint }}
          stat ${{ steps.pkg-action.outputs.file }}

    - name: Post build OIBus library for ${{ matrix.config['friendlyName'] }}
      shell: bash
      run: |
        mkdir -p build/bin/${{ matrix.config['platform'] }}
        cp ${{ steps.pkg-action.outputs.file }} build/bin/linux-arm64/oibus
        cp build/deps/linux/* ./build/bin/linux-arm64/

    - name: Upload ${{ steps.pkg-action.outputs.artifact-key }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.pkg-action.outputs.artifact-key }}
        path: ${{ steps.pkg-action.outputs.file }}
        if-no-files-found: error
        retention-days: 1

