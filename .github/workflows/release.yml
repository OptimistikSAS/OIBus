name: Release next OIBus version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to bump to'
        required: false

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  standard-version:
    name: 'Bump OIBus version'
    needs: tests
    runs-on: ubuntu-latest
    outputs:
      version-tag: ${{ steps.standard-version.outputs.version-tag }}
      prerelease: ${{ steps.standard-version.outputs.prerelease }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup_environment
        with:
          cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}

      - name: Bump version
        id: standard-version
        run: |
          git config --global user.name 'optimistik-actions'
          git config --global user.email 'optimistiksas@users.noreply.github.com'
          VERSION_ARGS=""
          PRERELEASE=false
          BRANCH=$(git branch --show-current| tr '\\/' - | tr -dc '[:alnum:]-+.\n\r' ) # first tr replace / and \ to -, second tr removes all non alphanums except .+-\n\r)
          if [ "$BRANCH" == main ]; then
            VERSION_ARGS="--prerelease alpha"
            PRERELEASE=true
          elif [ "$BRANCH" != release ]; then
            VERSION_ARGS="--prerelease ${BRANCH}"
            PRERELEASE=true
          fi
          if [ "${{ github.event.inputs.version }}" != "" ] && [ "$BRANCH" == release ]; then
            VERSION_ARGS="$VERSION_ARGS --release-as ${{ github.event.inputs.version }}"
          fi
          npm run bump -- $VERSION_ARGS
          echo ::set-output name=version-tag::$(git describe --tags $(git rev-list --tags --max-count=1))
          echo ::set-output name=prerelease::$PRERELEASE

      - name: Upload artifact CHANGELOG.md
        uses: actions/upload-artifact@v3
        with:
          path: ./CHANGELOG.md

  build-binaries:
    needs: standard-version
    uses: ./.github/workflows/build-binaries.yml

  publish-binaries:
    needs: [build-binaries, standard-version]
    name: 'Publish OIBus binaries'
    runs-on: ubuntu-latest
    steps:
      - name: Download OIBus artifacts
        id: download
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.standard-version.outputs.version-tag }}
          name: ${{ needs.standard-version.outputs.version-tag }}
          body_path: ./artifact/CHANGELOG.md
          prerelease: ${{ needs.standard-version.outputs.prerelease }}
          files: |
            ./artifact/OIBus-setup-win32x64.exe
            ./artifact/OIBus-linux.zip
            ./artifact/OIBus-macos.zip
            ./artifact/OIBus-win32x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }} # Need REPO_ACCESS_TOKEN to propagate 'release published' event

